[tool.poetry]
name = "hello"
version = "0.1.0"
description = "An example project with Poetry and scikit-build."
license = "MIT"
authors = ["Takahiro Ueda <tueda@st.seikei.ac.jp>"]
readme = "README.md"
repository = "https://github.com/tueda/test-poetry-scikit-build"

include = [
    # Source files for C extensions must be included in the source distribution.
    { path = "CMakeLists.txt", format = "sdist" },
    { path = "hello/**/*.cxx", format = "sdist" },
    # C extensions must be included in the wheel distribution.
    { path = "hello/**/*.pyd", format = "wheel" },
]
exclude = [
    "hello/**/*.cxx",
    "hello/**/*.pyd",
]

[tool.poetry.build]
generate-setup-file = false
script = "build.py"

[tool.poetry.dependencies]
python = "^3.6.1"

[tool.poetry.dev-dependencies]
cmake = "^3.18.4"
pre-commit = "^2.9.3"
pytest = "^6.2.1"
pytest-cov = "^2.11.0"
scikit-build = "^0.12.0"
taskipy = "^1.6.0"

[build-system]
requires = ["poetry-core>=1.0.0", "scikit-build", "cmake", "ninja"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
exclude_lines = [
    "@overload",
    "if TYPE_CHECKING:",
    "pragma: no cover",
    "raise AssertionError()",
    "return NotImplemented",
]

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = [
    "--cov-report=html",
    "--cov-report=term",
    "--cov=hello",
    "--doctest-modules",
    "--ignore=_skbuild",
    "--ignore=build.py",
]

[tool.taskipy.tasks]
install-pre-commit = "pre-commit install && pre-commit install --hook-type commit-msg"

lint = "pre-commit run --all-files"

build_ext = "python build.py"

test = "pytest"
pre_test = "task build_ext"
